unit Unit12;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  dbConn_u,Dialogs, Grids, StdCtrls, DB, ADODB, ExtCtrls, ComCtrls, pngimage,
   DBGrids, unit14, productDetails, stockitems, userAcc, Buttons;

type
  TForm12 = class(TForm)
    ADOQuery1: TADOQuery;
    DataSource1: TDataSource;
    GridPanel1: TGridPanel;
    Panel1: TPanel;
    Image1: TImage;
    TabControl1: TTabControl;
    fp1: TFlowPanel;
    fp2: TFlowPanel;
    fp3: TFlowPanel;
    fp4: TFlowPanel;
    fp6: TFlowPanel;
    fp5: TFlowPanel;
    fp0: TFlowPanel;
    GridPanel2: TGridPanel;
    Button4: TButton;
    Button1: TButton;
    Button3: TButton;
    BitBtn1: TBitBtn;
    GridPanel3: TGridPanel;
    Panel2: TPanel;
    StringGrid1: TStringGrid;
    Button2: TButton;
    Button5: TButton;
    Label4: TLabel;
    fp7: TScrollBox;
    FlowPanel1: TFlowPanel;
    GridPanel4: TGridPanel;
    Button6: TButton;
    Edit1: TEdit;
    fp8: TScrollBox;
    FlowPanel2: TFlowPanel;
    procedure FormCreate(Sender: TObject);
    procedure TabControl1Change(Sender: TObject);
    function getParent(foodType: String) : TFlowPanel;
    procedure Image1Click(Sender: TObject);
    procedure StringGrid1DragOver(Sender, Source: TObject; X, Y: Integer;
      State: TDragState; var Accept: Boolean);
    procedure Button4Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure ButtonPanelClick(Sender: TObject);
    procedure addItem(item, UnitCost, Quantity , stockId: String);
    procedure StringGrid1DragDrop(Sender, Source: TObject; X, Y: Integer);
    function alreadySet(item :String): Boolean;
    procedure Button2Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure Button6Click(Sender: TObject);
    procedure Edit1Change(Sender: TObject);
    procedure Edit1KeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure buttonClick(Sender: TObject);
    procedure clickHandler(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure FormCanResize(Sender: TObject; var NewWidth, NewHeight: Integer;
      var Resize: Boolean);
    procedure BitBtn1Click(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
    function findItem( stockId : String) : TStockItem;
  public
    { Public declarations }
    Account : TAccount;
    procedure updateStock;
  end;

var
  Form12: TForm12;
  arrPanels,arrSearch, arrAllAZ : array of TPanel;
  arrPrices : array of real;
  arrItems : array of TStockItem;

  //create class for each food item,where i can simply get all details
  //like name, stockCount, etc...
  numR : Integer=0;
  iniPos : integer = 0;
  iniPos2 : integer = 0;
  abcd: Boolean = False;

implementation
uses dashboard_u, Unit17;
{$R *.dfm}

procedure TForm12.addItem(item, UnitCost, Quantity, stockID: String);
var x:integer;
begin
//this code adds a stock item to the shopping list
if not alreadySet(item) then
begin

//if /when the stock has depleted and yet user still requests
//for it, then we inform them that it's completed and that they cant buy more of it.
if (findItem(stockId).getQuantity < StrToInt(Quantity)) then
  begin
    ShowMessage('Hey, unfortunately we have run out of stock for this product.');
    exit;
  end;

StringGrid1.Cells[0,numR]:=item;
StringGrid1.Cells[1,numR]:=UnitCost;
StringGrid1.Cells[2,numR]:=Quantity;
StringGrid1.Cells[3,numR]:=stockId;

numR:=numR+1;
StringGrid1.RowCount:=numR+1;
end;

end;

function TForm12.alreadySet(item: String): Boolean;
var x : integer;
    ans : Boolean;
begin
//
ans := False;
for x := 1 to numR do
  begin
    if StringGrid1.Cells[0,x]=item then
      begin
        StringGrid1.Row:=x;
        Button4Click(self);    //increment no of items.
        ans := True;
      end;
  end;
Result:=ans;
end;

procedure TForm12.BitBtn1Click(Sender: TObject);
var x :integer;
begin
//this code is to clear /remove all selected food products from the shopping list
for x := 1 to numR do
  begin
    StringGrid1.Cells[0,x]:='';
    StringGrid1.Cells[1,x]:='';
    StringGrid1.Cells[2,x]:='';
    StringGrid1.Cells[3,x]:='';

  end;

numR :=1;

with StringGrid1 do
  begin
    RowCount:=2;
    FixedRows := 1;
    GradientEndColor:= clBackground;
    GradientStartColor := clRed;
    Cells[0,0]:='Item';
    Cells[1,0]:='Unit Cost';
    Cells[2,0]:='Quantity';
    Cells[3,0]:='StockID';
  end;

end;

procedure TForm12.Button1Click(Sender: TObject);
var x,n:integer;
begin
//this code is to remove the selected food item from kart.
x:=StringGrid1.Row;
if x = 0 then exit;
n:=StrToInt(StringGrid1.Cells[2,x]);
if n>1 then
  StringGrid1.Cells[2,x]:=IntToStr(n-1);

end;

procedure TForm12.Button2Click(Sender: TObject);
begin
//if there's a transaction going on.
//we ensure that no of items they have chosen is more than or equal to 1
if numR >1 then
  begin
    form12.Hide;
    form14.Show;
  end
else ShowMessage('Select Items firstly!');
end;

procedure TForm12.Button3Click(Sender: TObject);
var x,n:integer;
begin

x:=StringGrid1.Row;
if x= 0 then exit;

{when something is deleted, everything else must move
one up}
if (x = 1) and (numR = 1) then
  begin
    StringGrid1.Cells[0,x]:='';
    StringGrid1.Cells[1,x]:='';
    StringGrid1.Cells[2,x]:='';
    StringGrid1.Cells[3,x]:='';
    StringGrid1.RowCount:=numR+1;

  end
else
begin
for n := x to numR do
  begin
      StringGrid1.Cells[0,n]:=StringGrid1.Cells[0,n+1];
      StringGrid1.Cells[1,n]:=StringGrid1.Cells[1,n+1];
      StringGrid1.Cells[2,n]:=StringGrid1.Cells[2,n+1];
      StringGrid1.Cells[3,n]:=StringGrid1.Cells[3,n+1];
      StringGrid1.Cells[0,n+1]:='';
      StringGrid1.Cells[1,n+1]:='';
      StringGrid1.Cells[2,n+1]:='';
      StringGrid1.Cells[3,n+1]:=''
  end;

numR:=numR-1;
StringGrid1.RowCount:=numR+1;
end;
end;

procedure TForm12.Button4Click(Sender: TObject);
var x,n:integer;
    stockItem : TStockItem;
begin
//this code is to increase no of prodduct one is purchasing
x:=StringGrid1.Row;
if x = 0 then exit;

stockItem := findItem(StringGrid1.Cells[3,x]);

n:=StrToInt(StringGrid1.Cells[2,x]);

if n < stockItem.getQuantity then
  StringGrid1.Cells[2,x]:=IntToStr(n+1)
else ShowMessage('Hey, unfortunately we have run out of stock for this item as you have baught the last of these items.');

end;

procedure TForm12.Button5Click(Sender: TObject);
var n:Integer;
begin
for n := 1 to numR do
  begin
      StringGrid1.Cells[0,n]:='';
      StringGrid1.Cells[1,n]:='';
      StringGrid1.Cells[2,n]:='';
      StringGrid1.Cells[3,n]:='';
  end;

numR:=0;
StringGrid1.RowCount:=2;
end;

//getting search results
procedure TForm12.Button6Click(Sender: TObject);
var x:integer;
begin
//this code is to select all the products that match
//user's input query
if Edit1.Text='' then
  begin
    ShowMessage('Enter Search Item');
    exit;
  end;
ADOQuery1.Close;
ADOQuery1.SQL.Text:='SELECT a.stockID,a.UnitCost,a.StockName, a.Category, b.Company'+
' from tblStock as a, tblSuppliers as b where a.SupplierID=b.SupplierID '+
' and ((a.StockName like "%'+Edit1.Text+'%") OR (b.Company like "%'+Edit1.Text+'%")) ORDER by a.stockID ASC';
ADOQuery1.Open;

if (abcd=True) and (length(arrSearch)>1) then
  begin
    for x := 0 to length(arrSearch)-1 do
      arrSearch[x].Free;
      FlowPanel1.Height:=300;
  end;

if ADOQuery1.RecordCount=0 then
  begin
    ADOQuery1.Close;
    Exit;
  end;

ADOQuery1.First;
x:=0;
SetLength(arrSearch,ADOQuery1.RecordCount);
while not ADOQuery1.Eof do
  begin
    arrSearch[x]:=TPanel.Create(self);
    arrSearch[x].Parent:=FlowPanel1 ;
    arrSearch[x].Caption := ADOQuery1['Company']+'-'+ADOQuery1['StockName'];

    arrSearch[x].Hint:= IntToStr(ADOQuery1['StockId']);
    arrSearch[x].ShowHint:=True;

    with arrSearch[x] do
      begin
        Width := 184;
        Height := 128;
        Margins.Left := 10;
        Margins.Top := 10;
        Margins.Right := 10;
        Margins.Bottom := 10;
        Padding.Left := 20;
        Padding.Top := 10;
        Padding.Right := 10;
        Padding.Bottom := 10;
        cursor := crHandPoint;
      end;
      arrSearch[x].FullRepaint:=True;
      arrSearch[x].ParentBackground:=True;
      arrSearch[x].Visible:=True;
      //arrSearch[x].OnDblClick := buttonPanelCLick;
      arrSearch[x].OnMouseDown := clickHandler;
  //    arrSearch[x].DragMode:=dmAutomatic;
    //  arrSearch[x].DragKind:=dkDrag;
      if ((x+1) mod 3)=0 then
        FlowPanel1.Height:=FlowPanel1.Height+150;
        FlowPanel1.Refresh;

      ADOQuery1.Next;
    x:=x+1;
  end;
  fp7.VertScrollBar.Range := FlowPanel1.Height + 150;

  if abcd=False then
    abcd:=True;
  ADOQuery1.Close;
end;

procedure TForm12.buttonClick(Sender: TObject);
var p : Tpanel;
    stockItem : TStockItem;
begin

//this is the code that is executed when user whishes to
//view the product in and it's details

form12.Enabled:=false;

p:= (sender as TPanel);

//stockItem := arrItems[StrToInt(p.Hint)-1];

stockItem := findItem(p.Hint);

//send details
productDetails.Form18.callerID:= self;
productDetails.Form18.location:= stockItem.getImageFile;
productDetails.Form18.getNames;
productDetails.Form18.Panel3.Caption:=UpperCase(stockItem.getStockName); //UpperCase(Copy(p.Caption,x+1, length(p.Caption)-x));
productDetails.Form18.Panel2.Caption:='COST : R'+ FloatToStr(stockItem.getUnitCost);
productDetails.Form18.Panel1.Caption:='BY '+UpperCase(stockItem.getCompany);
if stockItem.getQuantity < 10 then
  begin
    productDetails.Form18.Panel5.ParentBackground := False;
    productDetails.Form18.Panel5.ParentColor := False;
    productDetails.Form18.Panel5.Color := clRed;
  end
else
  begin
    productDetails.Form18.Panel5.Color := clBtnFace;
  end;

productDetails.Form18.Panel5.Caption:='Stock Count : '+IntToStr(stockItem.getQuantity);

productDetails.Form18.Show;
end;

procedure TForm12.ButtonPanelClick(Sender: TObject);
var stockItem : TStockItem;
    p : TPanel;
    c : string;

begin

// first and foremost find out the parent.
// if parent is panel, then flowpanel2,  then look for it
// in the arrAllAZ
// else look 4 it in arrPanels
// now we're doing this because all the prices are stored
// in a parallel array to the array with panels.
p:= (sender as TPanel);
//stockItem := arrItems[StrToInt(p.Hint) -1];

stockItem:= findItem(p.Hint);

c:= FloatToStr(stockItem.getUnitCost);

addItem(p.Caption,c,'1', p.hint);

end;

procedure TForm12.clickHandler(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
begin
//
if Button = mbLeft then  //if mouse is left clicked, then add item to cart
  begin
    ButtonPanelClick(sender);
  end
else
if button = mbRight then //if mouse is right clicked, then display details about food item
  begin
    buttonClick(sender);
  end;
end;

procedure TForm12.Edit1Change(Sender: TObject);
begin
//
end;

procedure TForm12.Edit1KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
//ShowMessage(inttostr(ord(key)));
end;

function TForm12.findItem(stockId: String): TStockItem;
var x,y : integer;
begin

for x := 0 to length(arrItems)-1 do
  begin
    if arrItems[x].getStockID = stockId then
      begin
        y := x;
        Break;
      end;
  end;
  
Result := arrItems[y];
end;

procedure TForm12.FormCanResize(Sender: TObject; var NewWidth,
  NewHeight: Integer; var Resize: Boolean);
begin
if (NewHeight>= 639) and (NewWidth>=1200) then
    begin
      Resize := True;
      Edit1.Width := Round(GridPanel4.ColumnCollection.Items[0].Value-10);
    end
else Resize := False;

end;

procedure TForm12.FormCloseQuery(Sender: TObject; var CanClose: Boolean);
begin
CanClose := False;
Image1Click(Self);
end;

procedure TForm12.FormCreate(Sender: TObject);
var x:Integer;
    pnl : TPanel;
begin
(Sender as TForm).Position:=poScreenCenter;
(Sender as TForm).DefaultMonitor := dmMainForm;
fp7.Color := RGB(255,140,0);
//making sure that the panel that is first seen is that of which has
//been selected on the tab control. ie. if tab 1 is slected
// then panel one should be displayed

for x := 0 to length(arrPanels) - 1 do
      arrPanels[x].Free;
for x := 0 to length(arrAllAZ) - 1 do
      arrAllAZ[x].Free;

fp1.BringToFront;

Edit1.Width := Round(GridPanel4.ColumnCollection.Items[0].Value-10);
fp7.VertScrollBar.Range := FlowPanel1.Height;

StringGrid1.Cells[0,0]:='Item';
StringGrid1.Cells[1,0]:='Unit Cost';
StringGrid1.Cells[2,0]:='Quantity';
StringGrid1.Cells[3,0]:='StockID';

numR :=1;
ADOQuery1.Close;
ADOQuery1.SQL.Text:='Select a.stockID,a.UnitCost,a.Quantity, a.StockName, a.Category, a.ImageFile, b.Company, a.SupplierID '+
' from tblStock as a, tblSuppliers as b where a.SupplierID=b.SupplierID and a.Quantity>0 ORDER by a.stockID ASC';
ADOQuery1.Open;

ADOQuery1.First;

x:=0;

SetLength(arrPanels,ADOQuery1.RecordCount);
SetLength(arrAllAZ,ADOQuery1.RecordCount);
SetLength(arrItems,ADOQuery1.RecordCount);

while not ADOQuery1.Eof do
  begin
    arrPanels[x]:=TPanel.Create(self);
    arrAllAZ[x]:=TPanel.Create(self);

    arrPanels[x].Parent:=getParent(lowercase(ADOQuery1['Category'])) ;
    arrAllAZ[x].Parent:= FlowPanel2;

    arrAllAZ[x].Hint:= IntToStr(ADOQuery1['StockID']);   //  or just x+1
    arrPanels[x].Hint:=IntToStr(ADOQuery1['StockID']);    //

    arrPanels[x].Caption := ADOQuery1['Company']+'-'+ADOQuery1['StockName'];
    arrAllAZ[x].Caption :=  ADOQuery1['Company']+'-'+ADOQuery1['StockName'];

    arrItems[x] := TStockItem.Create(IntToStr(ADOQuery1['StockID']) , ADOQuery1['StockName'],
      IntToStr(ADOQuery1['SupplierID']),ADOQuery1['ImageFile'],ADOQuery1['Category'],
      ADOQuery1['Company'],ADOQuery1['Quantity'],ADOQuery1['UnitCost'] );

    with arrPanels[x] do
      begin
        Width := 184;
        Height := 128;
        Margins.Left := 10;
        Margins.Top := 10;
        Margins.Right := 10;
        Margins.Bottom := 10;
        Padding.Left := 20;
        Padding.Top := 10;
        Padding.Right := 10;
        Padding.Bottom := 10;
        cursor := crHandPoint;
      end;

    with arrAllAZ[x] do
      begin
        Width := 184;
        Height := 128;
        Margins.Left := 10;
        Margins.Top := 10;
        Margins.Right := 10;
        Margins.Bottom := 10;
        Padding.Left := 20;
        Padding.Top := 10;
        Padding.Right := 10;
        Padding.Bottom := 10;
        cursor := crHandPoint;
      end;

      arrAllAZ[x].FullRepaint:=True;
      arrAllAZ[x].ParentBackground:=True;
      arrAllAZ[x].Visible:=True;
      //arrAllAZ[x].OnDblClick := buttonPanelCLick;
      arrAllAZ[x].OnMouseDown := clickHandler;
      arrAllAZ[x].ShowHint:=True;
      //arrAllAZ[x].DragMode:=dmAutomatic;
      //arrAllAZ[x].DragKind:=dkDrag;

      arrPanels[x].FullRepaint:=True;
      arrPanels[x].ParentBackground:=True;
      arrPanels[x].Visible:=True;
      //arrPanels[x].OnDblClick := buttonPanelCLick;
      arrPanels[x].OnMouseDown := clickHandler;
      arrPanels[x].ShowHint:=True;
      //arrPanels[x].DragMode:=dmAutomatic;
      //arrPanels[x].DragKind:=dkDrag;
      if ((x+1) mod 3)=0 then
        FlowPanel2.Height:=FlowPanel2.Height+100;

      ADOQuery1.Next;
      x:=x+1;
  end;
  ADOQuery1.Close;
  FlowPanel2.Refresh;
  fp8.VertScrollBar.Range := FlowPanel2.Height;
end;

procedure TForm12.FormShow(Sender: TObject);
begin
updateStock;
end;

function TForm12.getParent(foodType: String): TFlowPanel;
begin
if foodType='beverage' then
    Result := fp0
  else
  if foodType='snack' then
    Result := fp1
  else
  if foodType='food' then
    Result := fp2
  else
  if foodType='spices' then
    Result := fp3
  else
  if foodType='extras' then
    Result := fp4
  else
  if foodType='dairy' then
    Result := fp5
  else
  if foodType='fruits and vegetables' then
    Result := fp6;
end;

procedure TForm12.Image1Click(Sender: TObject);
begin
form2.Show;
form12.hide;
end;

procedure TForm12.StringGrid1DragDrop(Sender, Source: TObject; X, Y: Integer);
begin
addItem((source as TPanel).Caption, '0','1',(source as TPanel).hint );
end;

procedure TForm12.StringGrid1DragOver(Sender, Source: TObject; X, Y: Integer;
  State: TDragState; var Accept: Boolean);
begin
Accept:=(source is TPanel);
end;

procedure TForm12.TabControl1Change(Sender: TObject);
begin
//ShowMessage(IntToStr(TabControl1.TabIndex));
if TabControl1.TabIndex<7 then
(FindComponent('fp'+IntToStr(TabControl1.TabIndex)) as TFLowPanel).BringToFront
else
  begin
    (FindComponent('fp'+IntToStr(TabControl1.TabIndex)) as TScrollBox).BringToFront;
  end;
end;

procedure TForm12.updateStock;
var x : integer;
begin
//
BitBtn1Click(self);
TabControl1.TabIndex := 0;
fp0.BringToFront;

for x := 0 to length(arrPanels) - 1 do
      arrPanels[x].Free;
for x := 0 to length(arrAllAZ) - 1 do
      arrAllAZ[x].Free;
for x := 0 to length(arrItems) - 1 do
      arrItems[x].Free;

Edit1.Width := Round(GridPanel4.ColumnCollection.Items[0].Value-10);
fp7.VertScrollBar.Range := FlowPanel1.Height;

numR :=1;
ADOQuery1.Close;
ADOQuery1.SQL.Text:='Select a.stockID,a.UnitCost,a.Quantity, a.StockName, a.Category, a.ImageFile, b.Company, a.SupplierID '+
' from tblStock as a, tblSuppliers as b where a.SupplierID=b.SupplierID and a.Quantity>0 ORDER by a.stockID ASC';
ADOQuery1.Open;

ADOQuery1.First;

x:=0;

SetLength(arrPanels,ADOQuery1.RecordCount);
SetLength(arrAllAZ,ADOQuery1.RecordCount);
SetLength(arrItems,ADOQuery1.RecordCount);

while not ADOQuery1.Eof do
  begin
    arrPanels[x]:=TPanel.Create(self);
    arrAllAZ[x]:=TPanel.Create(self);

    arrPanels[x].Parent:=getParent(lowercase(ADOQuery1['Category'])) ;
    arrAllAZ[x].Parent:= FlowPanel2;

    arrAllAZ[x].Hint:= IntToStr(ADOQuery1['StockID']);   //  or just x+1
    arrPanels[x].Hint:=IntToStr(ADOQuery1['StockID']);    //

    arrPanels[x].Caption := ADOQuery1['Company']+'-'+ADOQuery1['StockName'];
    arrAllAZ[x].Caption :=  ADOQuery1['Company']+'-'+ADOQuery1['StockName'];

    arrItems[x] := TStockItem.Create(IntToStr(ADOQuery1['StockID']) , ADOQuery1['StockName'],
      IntToStr(ADOQuery1['SupplierID']),ADOQuery1['ImageFile'],ADOQuery1['Category'],
      ADOQuery1['Company'],ADOQuery1['Quantity'],ADOQuery1['UnitCost'] );

    with arrPanels[x] do
      begin
        Width := 184;
        Height := 128;
        Margins.Left := 10;
        Margins.Top := 10;
        Margins.Right := 10;
        Margins.Bottom := 10;
        Padding.Left := 20;
        Padding.Top := 10;
        Padding.Right := 10;
        Padding.Bottom := 10;
        cursor := crHandPoint;
      end;

    with arrAllAZ[x] do
      begin
        Width := 184;
        Height := 128;
        Margins.Left := 10;
        Margins.Top := 10;
        Margins.Right := 10;
        Margins.Bottom := 10;
        Padding.Left := 20;
        Padding.Top := 10;
        Padding.Right := 10;
        Padding.Bottom := 10;
        cursor := crHandPoint;
      end;

      arrAllAZ[x].FullRepaint:=True;
      arrAllAZ[x].ParentBackground:=True;
      arrAllAZ[x].Visible:=True;
      //arrAllAZ[x].OnDblClick := buttonPanelCLick;
      arrAllAZ[x].OnMouseDown := clickHandler;
      arrAllAZ[x].ShowHint:=True;
      //arrAllAZ[x].DragMode:=dmAutomatic;
      //arrAllAZ[x].DragKind:=dkDrag;

      arrPanels[x].FullRepaint:=True;
      arrPanels[x].ParentBackground:=True;
      arrPanels[x].Visible:=True;
      //arrPanels[x].OnDblClick := buttonPanelCLick;
      arrPanels[x].OnMouseDown := clickHandler;
      arrPanels[x].ShowHint:=True;
      //arrPanels[x].DragMode:=dmAutomatic;
      //arrPanels[x].DragKind:=dkDrag;
      if ((x+1) mod 3)=0 then
        FlowPanel2.Height:=FlowPanel2.Height+100;

      ADOQuery1.Next;
      x:=x+1;
  end;
  ADOQuery1.Close;
  FlowPanel2.Refresh;
  fp8.VertScrollBar.Range := FlowPanel2.Height;
  Form12.Refresh;

end;

end.
